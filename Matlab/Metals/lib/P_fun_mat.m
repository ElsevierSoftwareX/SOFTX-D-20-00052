% Function: P matrices for isotropic materials
function P_fun_val = P_fun_mat(xs, ys, xa, ya, xd, yd, V)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Input paramters:
%       xs, ys          -   X and Y coordinates of the sensor location
%       xa, ya          -   X and Y coordinates of the actuator location
%       xd, yd          -   X and Y coordinates of the damage location
%       V               -   Wave propagation velocity
%
%   Output parameters:
%       P_fun_val      -   Multiplication of gradient of the time-of-flight
%                          model in a matrix form
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
P_fun_val = [(-((xa - xd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (xs - xd)./(V.*sqrt((xs - xd).^2 + (ys - yd).^2))).^2,...
   (-((xa - xd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (xs - xd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))).*(-((ya - yd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (ys - yd)./(V.*sqrt((xs - xd).^2 + (ys - yd).^2))),...
   (-((xa - xd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (xs - xd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))).*(-(sqrt((xa - xd).^2 + (ya - yd).^2)./V.^2) - sqrt((xs - xd).^2 + (ys - yd).^2)./V.^2); ...
   (-((xa - xd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (xs - xd)./(V.*sqrt((xs - xd).^2 + ... 
   (ys - yd).^2))).*(-((ya - yd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (ys - yd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))), (-((ya - yd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (ys - yd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))).^2, (-((ya - yd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (ys - yd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))).*(-(sqrt((xa - xd).^2 + (ya - yd).^2)./V.^2) - sqrt((xs - xd).^2 + (ys - yd).^2)./V.^2); ...
   (-((xa - xd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (xs - xd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))).*(-(sqrt((xa - xd).^2 + (ya - yd).^2)./V.^2) - sqrt((xs - xd).^2 + (ys - yd).^2)./V.^2), ...
   (-((ya - yd)./(V.*sqrt((xa - xd).^2 + (ya - yd).^2))) - (ys - yd)./(V.*sqrt((xs - xd).^2 + ...
   (ys - yd).^2))).*(-(sqrt((xa - xd).^2 + (ya - yd).^2)./V.^2) - sqrt((xs - xd).^2 + (ys - yd).^2)./V.^2), ...
   (-(sqrt((xa - xd).^2 + (ya - yd).^2)./V.^2) - sqrt((xs - xd).^2 + (ys - yd).^2)./V.^2).^2];
end